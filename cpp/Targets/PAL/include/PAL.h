/*
Copyright (c) 1999 - 2010, Vodafone Group Services Ltd
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    * Neither the name of the Vodafone Group Services Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/


#ifndef PAL_H
#define PAL_H

#include "PALMachineTypes.h"
#include "PALTypes.h"

namespace pal {

/**
 * The different error codes that can be generated by the PAL.
 */ 
enum pstatus { PAL_OK = 0,
               
               // enums for PALGraphics
               PAL_ERR_FONT_SURFACE_ERROR = 1000,
               PAL_ERR_GRAPHICS_CONTEXT_INVALID,
               PAL_ERR_IMG_TYPE_NOT_SUPPORTED,
               PAL_ERR_BUFFER_FORMAT_NOT_SUPPORTED,
               PAL_ERR_FONT_FAILED_TO_INITIALIZE,
               PAL_ERR_FONT_FAILED_TO_FINALIZE,
               PAL_ERR_TEXT_INVALID,
               PAL_ERR_TEXT_FONT_FAMILY_INVALID,
               PAL_ERR_TEXT_FONT_STYLE_INVALID,

               //enums for PALThreading
               PAL_ERR_CANNOT_DESTROY_RUNNING_THREAD = 2000,
               PAL_ERR_CANNOT_START_BROKEN_THREAD,
               PAL_ERR_CANNOT_START_NULL_THREAD,
               PAL_ERR_CANNOT_DESTROY_MUTEX,
               PAL_ERR_CANNOT_DESTROY_NULL_MUTEX,
               PAL_ERR_CANNOT_SLEEP_BROKEN_THREAD,
               PAL_ERR_CANNOT_DESTROY_NULL_THREAD,
               PAL_CONDITIONAL_WOKE_UP_FROM_TIMEOUT,

               // enums for PALRunLoop
               PAL_ERR_INVALID_TIMER,
               PAL_ERR_EXPIRED_TIMER,

               /// enums for PALNetwork
               PAL_SELECT_ERROR = 3000,
               PAL_READ_ERROR,
               PAL_WRITE_ERROR,
               
               /// enums for PALNetwork::disconnect
               PAL_NO_SOCKET_CONTEXT_PARAMS,
               PAL_SOCKET_NOT_CONNECTED,
               PAL_DISCONNECT_ERROR,

               /// enums for PALNetwork::connect
               PAL_CONNECTION_REFUSED,
               PAL_SOCKET_ALREADY_CONNECTED,
               PAL_CONNECTION_ATTEMPT_TIMEDOUT,
               PAL_CONNECT_ERROR,

               /// enums for PALNetwork::createSocket
               PAL_SOCKET_PERMISSION_DENIED,
               PAL_PROTOCOL_NOT_SUPPORTED,
               PAL_OUT_OF_MEMORY,
               PAL_SOCKET_ERROR,

};

/**
 *  FUNCTION: retCodeToString
 *
 *  Returns a string representation of a return code.
 *
 */ 
const char* retCodeToString(pstatus t);

} // End of namespace PAL

#endif /* PAL_H */
